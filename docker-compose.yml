version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      elastic: {}

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      elastic: {}

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: host.docker.internal  # Access host PostgreSQL
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: newlearn
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: 123
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "9090:8080"
    networks:
      keycloak: {}

  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Console
    volumes:
      - minio-data:/data
    networks:
      default: {}

  tesseract:
    image: tesseractshadow/tesseract4re
    container_name: tesseract
    command: tail -f /dev/null  # Keep container running
    volumes:
      - ./tessdata:/usr/share/tessdata  # You can place images here for testing
    environment:
      - TESSDATA_PREFIX=/usr/share
    networks:
      default: {}

volumes:
  elasticsearch-data:
    driver: local
  minio-data:
    driver: local

networks:
  elastic: {}
  keycloak: {}
